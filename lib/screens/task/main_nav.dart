import 'package:bottom_nav_layout/bottom_nav_layout.dart';import 'package:dependencies/dependencies.dart';import 'package:flutter/material.dart';import 'package:remont_kz/domain/services/rest_services.dart';import 'package:remont_kz/main.dart';import 'package:remont_kz/screens/category/category_screen.dart';import 'package:remont_kz/screens/chat/chat_screens.dart';import 'package:remont_kz/screens/create/create_task_screen.dart';import 'package:remont_kz/screens/task/main_screen/main_view_screen.dart';import 'package:remont_kz/screens/task/profile/my_profile_screen.dart';import 'package:remont_kz/utils/app_colors.dart';class MainNavbar extends StatefulWidget {  const MainNavbar({Key? key}) : super(key: key);  @override  State<MainNavbar> createState() => _MainNavbarState();}class _MainNavbarState extends State<MainNavbar> {  @override  void initState() {    if(tokenStore.accessToken!=null){      WidgetsBinding.instance.addPostFrameCallback((_) async {        try {          final newMessages = await RestServices().isHaveNewMessage();          print(newMessages);          if(newMessages!=null){            if (mounted) {              setState(() {                newMessage = newMessages;              });            }          }        } catch (e) {          print("Error fetching publication: $e");        }});    }    super.initState();  }  @override  Widget build(BuildContext context) {    return BottomNavLayout(      pages: [        (_) => const MainScreen(),        (_) => CategoriesScreen(showLeading: false, isClient:true),        (_) => const CreateTaskScreen(),            (_) =>  ChatScreens(isClient: true,),        (_) => const MyProfileScreen(),      ],      bottomNavigationBar: (currentIndex, onTap) => Container(          decoration: BoxDecoration(            boxShadow: <BoxShadow>[              BoxShadow(                color: Colors.black,                blurRadius: 0.5.h,              ),            ],          ),          child: Theme(          data: Theme.of(context).copyWith(            splashColor: Colors.transparent,            highlightColor: Colors.transparent,          ),          child: BottomNavigationBar(            type: BottomNavigationBarType.fixed,        currentIndex: currentIndex,        onTap: (index) => onTap(index),        items:  [          const BottomNavigationBarItem(            icon: ImageIcon(AssetImage('assets/images/main.png')),            label: 'Главная',          ),          const BottomNavigationBarItem(            icon: ImageIcon(AssetImage('assets/images/category.png')),            label: 'Категории',          ),          const BottomNavigationBarItem(            icon: ImageIcon(AssetImage('assets/images/create.png')),            label: 'Создать',          ),          BottomNavigationBarItem(            icon:  newMessage!= null ?            newMessage == true                ?            Stack(              children: [                Container(                  padding: EdgeInsets.all(4.w),                  child: SvgPicture.asset(                    'assets/icons/chat_menu.svg',                    fit: BoxFit.fill,                  ),                ),                Positioned(                    right: -2,                    top: 0,                    child: Icon(Icons.notifications_active_outlined, color: AppColors.red,                      size: 12.w,))              ],            ) : SvgPicture.asset(              'assets/icons/chat_menu.svg',              fit: BoxFit.fill,            ) :  SvgPicture.asset(              'assets/icons/chat_menu.svg',              fit: BoxFit.fill,            ),            activeIcon: SvgPicture.asset(              'assets/icons/chat_menu.svg',              fit: BoxFit.fill,              color: AppColors.primary,            ),            label: 'Сообщения',          ),          const BottomNavigationBarItem(            icon: ImageIcon(AssetImage('assets/images/profile.png')),            label: 'Профиль',          ),        ],        selectedItemColor: AppColors.primary,        unselectedItemColor: AppColors.primaryGray,        backgroundColor: AppColors.white,        selectedFontSize: 10,        showUnselectedLabels: true,        unselectedFontSize: 10,      ),),),    );  }}