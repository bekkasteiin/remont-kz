import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:remont_kz/utils/app_colors.dart';import 'package:remont_kz/utils/app_text_style.dart';DialogTheme get magnumDialogTheme => DialogTheme(  titleTextStyle: AppTextStyles.h2Bold,  shape: RoundedRectangleBorder(    borderRadius: BorderRadius.circular(12.r),  ),);final magnumRadioTheme = RadioThemeData(  splashRadius: 17.r,  fillColor: MaterialStateProperty.resolveWith((states) {    return AppColors.primary;  }),  // activeColor: MColors.primarySecondary,);final _buttonFixedSize = Size.fromHeight(48.h);final _buttonPadding = EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h);final _buttonShape = RoundedRectangleBorder(borderRadius: BorderRadius.circular(24.r));final elevatedButtonStyle = ElevatedButton.styleFrom(  onPrimary: AppColors.white,  fixedSize: _buttonFixedSize,  padding: _buttonPadding,  textStyle: AppTextStyles.button,  shape: _buttonShape,).copyWith(  backgroundColor: MaterialStateColor.resolveWith(    (states) => states.contains(MaterialState.disabled) ? AppColors.darkGray : AppColors.primary,  ),  foregroundColor: MaterialStateColor.resolveWith(    (states) => states.contains(MaterialState.disabled) ? AppColors.grayDark : AppColors.graySearch,  ),);final outlinedButtonStyle = OutlinedButton.styleFrom(  primary: AppColors.primary,  textStyle: AppTextStyles.button,  fixedSize: _buttonFixedSize,  padding: _buttonPadding,  shape: _buttonShape,).copyWith(  foregroundColor: MaterialStateColor.resolveWith(    (states) => states.contains(MaterialState.disabled) ? AppColors.graySearch : AppColors.primary,  ),  side: MaterialStateBorderSide.resolveWith(    (states) {      if (states.contains(MaterialState.disabled)) {        return BorderSide(color: AppColors.graySearch, width: 1.5.r);      }      return BorderSide(color: AppColors.primary, width: 1.5.r);    },  ),);final textButtonStyle = TextButton.styleFrom(  primary: AppColors.primarySecondary,  textStyle: AppTextStyles.button,  fixedSize: _buttonFixedSize,  padding: _buttonPadding,  shape: _buttonShape,);final magnumSwitchTheme = SwitchThemeData(  trackColor: MaterialStateProperty.resolveWith((states) {    if (states.contains(MaterialState.selected)) {      return AppColors.primarySecondary;    }    return AppColors.grayMedium;  }),  thumbColor: MaterialStateProperty.resolveWith((states) {    if (states.contains(MaterialState.selected)) {      return AppColors.textActiveMistake;    }    return AppColors.skeletonGradientBegin;  }),);