import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_native_splash/flutter_native_splash.dart';import 'package:shared_preferences/shared_preferences.dart';class CoreConfig {  late Widget _app;  late Function _initDI;  CoreConfig setApp(Widget app) {    _app = app;    return this;  }  CoreConfig initDI(Function value) {    _initDI = value;    return this;  }  void build() async {    WidgetsBinding widgetsBinding = WidgetsFlutterBinding.ensureInitialized();    /// инициализация внешнего DI    _initDI.call();    /// установить стиль    SystemChrome.setSystemUIOverlayStyle(      const SystemUiOverlayStyle(        statusBarColor: Colors.transparent,        statusBarIconBrightness: Brightness.light,      ),    );    /// TODO interceptor жасау керек    /// инициализация tokenService и prefsService    // TokenStoreService tokenService = getIt<TokenStoreService>();    SharedPreferences sharedPreferences = await SharedPreferences.getInstance();    // tokenService.initialize(sharedPreferences);    /// Добавляем token interceptor на случай авторизованного входа    // final profileRepo = getIt<ProfileRepo>();    // profileRepo.addInterceptor();    /// Показываем splash до тех пор пока не будет готов первый экран    FlutterNativeSplash.preserve(widgetsBinding: widgetsBinding);    /// запуск приложения    runApp(_app);  }}