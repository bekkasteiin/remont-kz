import 'dart:io';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:modal_bottom_sheet/modal_bottom_sheet.dart' as mbs;class ModalService {  Future<T?> showModalDialog<T>({    required BuildContext context,    required WidgetBuilder builder,    bool barrierDismissible = false,    bool useRootNavigator = true,  }) async {    if (Platform.isIOS) {      return showCupertinoDialog<T>(        context: context,        builder: builder,        barrierDismissible: barrierDismissible,        useRootNavigator: useRootNavigator,      );    } else {      return showDialog<T>(        context: context,        builder: builder,        barrierDismissible: barrierDismissible,        useRootNavigator: useRootNavigator,      );    }  }  void showBottomModal(      BuildContext context,      Widget child, {        bool isDismissible = true,        bool useRootNavigator = true,        bool expand = false,      }) {    if (Platform.isIOS && expand) {      mbs.showCupertinoModalBottomSheet(        context: context,        isDismissible: isDismissible,        backgroundColor: Theme.of(context).scaffoldBackgroundColor,        useRootNavigator: useRootNavigator,        expand: expand,        builder: (_) => Material(child: child),      );      return;    }    mbs.showCustomModalBottomSheet(      context: context,      isDismissible: isDismissible,      backgroundColor: Theme.of(context).scaffoldBackgroundColor,      useRootNavigator: useRootNavigator,      expand: expand,      builder: (_) => child,      containerWidget: (_, __, Widget child) => _BottomSheetContainer(child: child),    );  }}class _BottomSheetContainer extends StatelessWidget {  final Widget child;  const _BottomSheetContainer({    Key? key,    required this.child,  }) : super(key: key);  @override  Widget build(BuildContext context) {    const _shadow = BoxShadow(blurRadius: 10, color: Colors.black12, spreadRadius: 5);    return ClipRRect(      borderRadius: BorderRadius.vertical(        top: Radius.circular(12.r),      ),      child: Container(        decoration: BoxDecoration(color: Theme.of(context).scaffoldBackgroundColor, boxShadow: const [_shadow]),        width: double.infinity,        child: MediaQuery.removePadding(          context: context,          removeTop: true, //Remove top Safe Area          child: Material(            child: child,          ),        ),      ),    );  }}